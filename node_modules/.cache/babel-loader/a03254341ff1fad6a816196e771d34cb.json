{"ast":null,"code":"var _jsxFileName = \"/Users/parsa/Desktop/parsa/software project/CV/portfilo/src/components/common/CustomDivider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Divider, Chip, Typography, Slide } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomDivider = _ref => {\n  _s();\n\n  let {\n    bColor,\n    cColor,\n    icon,\n    align,\n    text\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    return () => {\n      setLoading(false);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"down\",\n      in: loading,\n      style: {\n        transitionDelay: loading ? \"200ms\" : \"0ms\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"middle\",\n        textAlign: align,\n        sx: {\n          \"&::before, &::after\": {\n            borderColor: bColor\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Chip, {\n          icon: icon,\n          color: cColor,\n          label: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"black\",\n            sx: {\n              textAlign: \"center\"\n            },\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this),\n          sx: {\n            p: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(CustomDivider, \"bp7W7BLZaxNmS0ceaCBH82+KoGQ=\");\n\n_c = CustomDivider;\nexport default CustomDivider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDivider\");","map":{"version":3,"names":["useState","useEffect","Divider","Chip","Typography","Slide","CustomDivider","bColor","cColor","icon","align","text","loading","setLoading","transitionDelay","borderColor","textAlign","p"],"sources":["/Users/parsa/Desktop/parsa/software project/CV/portfilo/src/components/common/CustomDivider.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { Divider, Chip, Typography, Slide } from \"@mui/material\";\n\nconst CustomDivider = ({ bColor, cColor, icon, align, text }) => {\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n\n        return () => {\n            setLoading(false);\n        };\n    }, []);\n\n    return (\n        <>\n            <Slide\n                direction=\"down\"\n                in={loading}\n                style={{\n                    transitionDelay: loading ? \"200ms\" : \"0ms\",\n                }}\n            >\n                <Divider\n                    variant=\"middle\"\n                    textAlign={align}\n                    sx={{\n                        \"&::before, &::after\": {\n                            borderColor: bColor,\n                        },\n                    }}\n                >\n                    <Chip\n                        icon={icon}\n                        color={cColor}\n                        label={\n                            <Typography\n                                variant=\"body1\"\n                                color=\"black\"\n                                sx={{ textAlign: \"center\" }}\n                            >\n                                {text}\n                            </Typography>\n                        }\n                        sx={{ p: 3 }}\n                    />\n                </Divider>\n            </Slide>\n        </>\n    );\n};\n\nexport default CustomDivider;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,UAAxB,EAAoCC,KAApC,QAAiD,eAAjD;;;;AAEA,MAAMC,aAAa,GAAG,QAA2C;EAAA;;EAAA,IAA1C;IAAEC,MAAF;IAAUC,MAAV;IAAkBC,IAAlB;IAAwBC,KAAxB;IAA+BC;EAA/B,CAA0C;EAC7D,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACZY,UAAU,CAAC,IAAD,CAAV;IAEA,OAAO,MAAM;MACTA,UAAU,CAAC,KAAD,CAAV;IACH,CAFD;EAGH,CANQ,EAMN,EANM,CAAT;EAQA,oBACI;IAAA,uBACI,QAAC,KAAD;MACI,SAAS,EAAC,MADd;MAEI,EAAE,EAAED,OAFR;MAGI,KAAK,EAAE;QACHE,eAAe,EAAEF,OAAO,GAAG,OAAH,GAAa;MADlC,CAHX;MAAA,uBAOI,QAAC,OAAD;QACI,OAAO,EAAC,QADZ;QAEI,SAAS,EAAEF,KAFf;QAGI,EAAE,EAAE;UACA,uBAAuB;YACnBK,WAAW,EAAER;UADM;QADvB,CAHR;QAAA,uBASI,QAAC,IAAD;UACI,IAAI,EAAEE,IADV;UAEI,KAAK,EAAED,MAFX;UAGI,KAAK,eACD,QAAC,UAAD;YACI,OAAO,EAAC,OADZ;YAEI,KAAK,EAAC,OAFV;YAGI,EAAE,EAAE;cAAEQ,SAAS,EAAE;YAAb,CAHR;YAAA,UAKKL;UALL;YAAA;YAAA;YAAA;UAAA,QAJR;UAYI,EAAE,EAAE;YAAEM,CAAC,EAAE;UAAL;QAZR;UAAA;UAAA;UAAA;QAAA;MATJ;QAAA;QAAA;QAAA;MAAA;IAPJ;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAoCH,CA/CD;;GAAMX,a;;KAAAA,a;AAiDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}